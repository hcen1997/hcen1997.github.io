<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-11-09T00:26:33+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Hcen-love-Zhouqiii</title><subtitle>Here is an AWESOME description. I am editing this in _config.yml. This should show in html-&gt;head-&gt;metadata (and i do not like google ) and i cannot find feed.xml file.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2020/11/08/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-11-08T22:08:15+08:00</published><updated>2020-11-08T22:08:15+08:00</updated><id>http://localhost:4000/jekyll/update/2020/11/08/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/11/08/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Apt Get Sockt5</title><link href="http://localhost:4000/2020/11/08/apt-get-sockt5.html" rel="alternate" type="text/html" title="Apt Get Sockt5" /><published>2020-11-08T00:00:00+08:00</published><updated>2020-11-08T00:00:00+08:00</updated><id>http://localhost:4000/2020/11/08/apt-get-sockt5</id><content type="html" xml:base="http://localhost:4000/2020/11/08/apt-get-sockt5.html">&lt;p&gt;sudo apt-get install kodi -o Acquire::http::proxy=”socks5h://127.0.0.1:1080/”&lt;/p&gt;</content><author><name></name></author><summary type="html">sudo apt-get install kodi -o Acquire::http::proxy=”socks5h://127.0.0.1:1080/”</summary></entry><entry><title type="html">Idea_register</title><link href="http://localhost:4000/2020/10/17/IDEA_register.html" rel="alternate" type="text/html" title="Idea_register" /><published>2020-10-17T00:00:00+08:00</published><updated>2020-10-17T00:00:00+08:00</updated><id>http://localhost:4000/2020/10/17/IDEA_register</id><content type="html" xml:base="http://localhost:4000/2020/10/17/IDEA_register.html">&lt;p&gt;the key is version 2020.1&lt;br /&gt;
and the ultimate agent&lt;br /&gt;
and someone gives the key to you&lt;/p&gt;</content><author><name></name></author><summary type="html">the key is version 2020.1 and the ultimate agent and someone gives the key to you</summary></entry><entry><title type="html">射箭</title><link href="http://localhost:4000/2020/10/01/%E5%B0%84%E7%AE%AD.html" rel="alternate" type="text/html" title="射箭" /><published>2020-10-01T00:00:00+08:00</published><updated>2020-10-01T00:00:00+08:00</updated><id>http://localhost:4000/2020/10/01/%E5%B0%84%E7%AE%AD</id><content type="html" xml:base="http://localhost:4000/2020/10/01/%E5%B0%84%E7%AE%AD.html">&lt;p&gt;2020年9月\d\d日 10米靶一组全黄&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;保持姿势一致,感觉一致,流程一致&lt;/li&gt;
  &lt;li&gt;右食指外侧靠下巴,弦靠鼻尖下巴中心&lt;/li&gt;
  &lt;li&gt;使用背肌拉弓&lt;/li&gt;
  &lt;li&gt;了解组的概念,一组箭6支&lt;/li&gt;
  &lt;li&gt;使用箭台和箭配合,单色羽朝外&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2020年10月17日 开始射18米靶
发现射箭规则&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;射箭需要抬后肘,因为可以避开食指碰箭尾的问题&lt;/li&gt;
  &lt;li&gt;k12流程中,抬左手的时候,就直接固定手的位置(高中低)了,之后都不动&lt;/li&gt;
  &lt;li&gt;需要靶纸才能射的更准&lt;/li&gt;
  &lt;li&gt;使用鼻子呼气,站稳&lt;/li&gt;
  &lt;li&gt;使用右眼,左边准星虚像&lt;/li&gt;
  &lt;li&gt;因为有箭台所以射出去的箭有旋转(物理)&lt;/li&gt;
  &lt;li&gt;因为有牛皮垫所以射箭次数限制从皮肤转到了筋肉&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2020-10-18 with other people&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;grep bow-wire hard like a hook and intentionaly relese the arror. is not ok
  because bow-wire will be desturbed. you have to let it go and follow it path.&lt;/li&gt;
  &lt;li&gt;people meet people, culture grow.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">2020年9月\d\d日 10米靶一组全黄 保持姿势一致,感觉一致,流程一致 右食指外侧靠下巴,弦靠鼻尖下巴中心 使用背肌拉弓 了解组的概念,一组箭6支 使用箭台和箭配合,单色羽朝外</summary></entry><entry><title type="html">记一次便宜摄像头开发</title><link href="http://localhost:4000/2020/07/27/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BE%BF%E5%AE%9C%E6%91%84%E5%83%8F%E5%A4%B4%E5%BC%80%E5%8F%91.html" rel="alternate" type="text/html" title="记一次便宜摄像头开发" /><published>2020-07-27T00:00:00+08:00</published><updated>2020-07-27T00:00:00+08:00</updated><id>http://localhost:4000/2020/07/27/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BE%BF%E5%AE%9C%E6%91%84%E5%83%8F%E5%A4%B4%E5%BC%80%E5%8F%91</id><content type="html" xml:base="http://localhost:4000/2020/07/27/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BE%BF%E5%AE%9C%E6%91%84%E5%83%8F%E5%A4%B4%E5%BC%80%E5%8F%91.html">&lt;p&gt;家里人买了一个100块以内的国产网络摄像头&lt;/p&gt;

&lt;h3 id=&quot;坑计数&quot;&gt;坑计数&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 摄像头有三个塑料天线,其中只有一个有用处,其他两个是雕像
2. 摄像头不支持完整onvifapi,甚至不支持ptz的position获取
3. 因为不完整的摄像头api,python-onvif库无法使用
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;需求&quot;&gt;需求&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;定时转动,拍照片,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;解决方法&quot;&gt;解决方法&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 拍照片: 通过opencv rtmp获取一张图片
2. 转动: 因为无法使用python库,所以通过wireShark抓取http包,直接发送指令
3. 定时: 以上功能化简为py脚本,使用crontab进行定时运行
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;吐槽&quot;&gt;吐槽&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. python无法像js一样简单的创建一个对象.java也是一样,想用先定义,
    但是需求只是简单的找个筐放数据而已.并且用'.'操作符方便的读取修改
2. 体系分层真的很有用,不然遇见在顶层无解的问题非常让人沮丧
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">家里人买了一个100块以内的国产网络摄像头 坑计数 1. 摄像头有三个塑料天线,其中只有一个有用处,其他两个是雕像 2. 摄像头不支持完整onvifapi,甚至不支持ptz的position获取 3. 因为不完整的摄像头api,python-onvif库无法使用 需求 定时转动,拍照片, 解决方法 1. 拍照片: 通过opencv rtmp获取一张图片 2. 转动: 因为无法使用python库,所以通过wireShark抓取http包,直接发送指令 3. 定时: 以上功能化简为py脚本,使用crontab进行定时运行 吐槽 1. python无法像js一样简单的创建一个对象.java也是一样,想用先定义, 但是需求只是简单的找个筐放数据而已.并且用'.'操作符方便的读取修改 2. 体系分层真的很有用,不然遇见在顶层无解的问题非常让人沮丧</summary></entry><entry><title type="html">Jenkins Gui</title><link href="http://localhost:4000/2019/11/27/jenkins-gui.html" rel="alternate" type="text/html" title="Jenkins Gui" /><published>2019-11-27T00:00:00+08:00</published><updated>2019-11-27T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/27/jenkins-gui</id><content type="html" xml:base="http://localhost:4000/2019/11/27/jenkins-gui.html">&lt;h3 id=&quot;jenkins-github-hits&quot;&gt;jenkins github hits&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;github token // used by jenkins&lt;/li&gt;
  &lt;li&gt;jenkins setting “cors block” “guest read auth”&lt;/li&gt;
  &lt;li&gt;new item -&amp;gt; free stayle // don’t use pipeline&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;hcen1997 on 2020-11-08:&lt;br /&gt;
gui is not for coder&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">jenkins github hits github token // used by jenkins jenkins setting “cors block” “guest read auth” new item -&amp;gt; free stayle // don’t use pipeline</summary></entry><entry><title type="html">Bash Multithreading</title><link href="http://localhost:4000/2019/11/24/bash-multithreading.html" rel="alternate" type="text/html" title="Bash Multithreading" /><published>2019-11-24T00:00:00+08:00</published><updated>2019-11-24T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/24/bash-multithreading</id><content type="html" xml:base="http://localhost:4000/2019/11/24/bash-multithreading.html">&lt;html&gt;
#!/usr/bin/bash
python -u -m http.server &amp;gt;&amp;gt; http.log
java -jar web-car.jar &amp;gt;&amp;gt; car.log
&lt;/html&gt;

&lt;p&gt;上面的代码不会顺序执行&lt;/p&gt;

&lt;p&gt;因为python语句会一直卡住 只到退出才行 
所以要用nohup &amp;amp;&lt;/p&gt;</content><author><name></name></author><summary type="html">#!/usr/bin/bash python -u -m http.server &amp;gt;&amp;gt; http.log java -jar web-car.jar &amp;gt;&amp;gt; car.log</summary></entry><entry><title type="html">Wireshark Prove Http Not Safe</title><link href="http://localhost:4000/2019/11/12/wireshark-prove-http-not-safe.html" rel="alternate" type="text/html" title="Wireshark Prove Http Not Safe" /><published>2019-11-12T00:00:00+08:00</published><updated>2019-11-12T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/12/wireshark-prove-http-not-safe</id><content type="html" xml:base="http://localhost:4000/2019/11/12/wireshark-prove-http-not-safe.html">&lt;p&gt;wireshark 爬虫
所以http不安全 可以有人半途拦截并注入恶意代码&lt;/p&gt;</content><author><name></name></author><summary type="html">wireshark 爬虫 所以http不安全 可以有人半途拦截并注入恶意代码</summary></entry><entry><title type="html">Auto Start Screen On Respi</title><link href="http://localhost:4000/2019/11/04/auto-start-screen-on-respi.html" rel="alternate" type="text/html" title="Auto Start Screen On Respi" /><published>2019-11-04T00:00:00+08:00</published><updated>2019-11-04T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/04/auto-start-screen-on-respi</id><content type="html" xml:base="http://localhost:4000/2019/11/04/auto-start-screen-on-respi.html">&lt;p&gt;how to set up an auto start screen using linux-orangepi&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;make img tf card&lt;/li&gt;
  &lt;li&gt;resize use gparted in another linux system&lt;/li&gt;
  &lt;li&gt;cat which-display-manager by
    &lt;blockquote&gt;
      &lt;p&gt;ls /usr/bin/*dm&lt;br /&gt;
  or&lt;br /&gt;
cat /etc/X11/default-display-manager&lt;br /&gt;
  x X x is captual&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;if using xfce, you can use ‘session and startup’ to start screpts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;total time spend: 5 hours&lt;/p&gt;</content><author><name></name></author><summary type="html">how to set up an auto start screen using linux-orangepi make img tf card resize use gparted in another linux system cat which-display-manager by ls /usr/bin/*dm or cat /etc/X11/default-display-manager x X x is captual if using xfce, you can use ‘session and startup’ to start screpts</summary></entry><entry><title type="html">Unknow</title><link href="http://localhost:4000/2019/10/29/unknow.html" rel="alternate" type="text/html" title="Unknow" /><published>2019-10-29T00:00:00+08:00</published><updated>2019-10-29T00:00:00+08:00</updated><id>http://localhost:4000/2019/10/29/unknow</id><content type="html" xml:base="http://localhost:4000/2019/10/29/unknow.html">&lt;p&gt;耗时服务如何传递消息?&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;spring mvc暴露接口&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;what is “耗时服务”?
what is this talking about?&lt;/p&gt;</content><author><name></name></author><summary type="html">耗时服务如何传递消息? spring mvc暴露接口</summary></entry></feed>